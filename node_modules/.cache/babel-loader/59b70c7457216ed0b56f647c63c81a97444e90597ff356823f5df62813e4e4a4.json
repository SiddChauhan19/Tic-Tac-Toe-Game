{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\ticktaktoegame\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\n\n// CHILD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  //adding onSquareClick funn to the Square component’s props\n  // const [value, setValue] = useState(null);//WE LIFT THIS is UP in parent com as \n  // function handleClick(){\n  //   setValue(\"X\");\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: onSquareClick,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// PARENT\n_c = Square;\nfunction App() {\n  _s();\n  const [xisNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square is already filled, you will return\n      return; //before it tries to update the board state.\n    }\n    // update the squares array holding your board’s state:\n    const nextSquares = squares.slice(); //nextSquares is shallow copy of squares array[allows us to make changes without modifying the original state]\n    if (xisNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // Update the 'nextSquares' array at index 'i' to \"X\".\n    setSquares(nextSquares); //to update the state of the 'squares' with 'nextSquares'. This triggers a re-render of the component, and the updated state is reflected in the UI.\n    setXIsNext(!xisNext);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner is:\" + winner;\n  } else {\n    status = \"Next Player: \" + (xisNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [winner ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"k4Qp2FXCxY07pBhnjkF9nEwj1Yc=\");\n_c2 = App;\nexport default function Game() {\n  _s2();\n  const [xisNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n}\n_s2(Game, \"8lnAzrf0F79Psm9uNiUE33PQZKU=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]; //destructuring assignment to extract the values at indices a, b, and c from the lines array.\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","xisNext","setXIsNext","squares","setSquares","Array","fill","handleClick","i","calculateWinner","nextSquares","slice","winner","status","_c2","Game","_s2","history","setHistory","_c3","lines","length","a","b","c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/ticktaktoegame/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\n// CHILD\nfunction Square({ value, onSquareClick }) { //adding onSquareClick funn to the Square component’s props\n  // const [value, setValue] = useState(null);//WE LIFT THIS is UP in parent com as \n  // function handleClick(){\n  //   setValue(\"X\");\n  // }\n  return (\n    <>\n      <button className='square' onClick={onSquareClick}>\n        {value}\n      </button>\n    </>\n  )\n}\n\n// PARENT\nfunction App() {\n  const [xisNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) { //If the square is already filled, you will return\n      return;       //before it tries to update the board state.\n    }\n    // update the squares array holding your board’s state:\n    const nextSquares = squares.slice();//nextSquares is shallow copy of squares array[allows us to make changes without modifying the original state]\n    if (xisNext) {\n      nextSquares[i] = \"X\";\n    }\n    else {\n      nextSquares[i] = \"O\";\n    }\n    // Update the 'nextSquares' array at index 'i' to \"X\".\n    setSquares(nextSquares);//to update the state of the 'squares' with 'nextSquares'. This triggers a re-render of the component, and the updated state is reflected in the UI.\n    setXIsNext(!xisNext);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner is:\" + winner;\n  }\n  else {\n    status = \"Next Player: \" + (xisNext ? \"X\" : \"O\");\n  }\n\n\n  return (\n    <>\n      {winner ? <h1 className='status'>{status}</h1> : <div className='status'>{status}</div>}\n      <div className='board-row'>\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n\n      <div className='board-row'>\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n\n      <div className='board-row'>\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\nexport default  function Game() {\n  const [xisNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6],\n    [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];//destructuring assignment to extract the values at indices a, b, and c from the lines array.\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}